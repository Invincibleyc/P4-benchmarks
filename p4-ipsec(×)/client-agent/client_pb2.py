# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: client.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='client.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0c\x63lient.proto\"+\n\x07request\x12\x0e\n\x06target\x18\x01 \x01(\t\x12\x10\n\x08\x63lientIP\x18\x02 \x01(\t\"\xbe\x03\n\x06tunnel\x12\x10\n\x08tunnelID\x18\x01 \x01(\x04\x12\x0c\n\x04left\x18\x02 \x01(\t\x12\x12\n\nleftSubnet\x18\x03 \x01(\t\x12\r\n\x05spiIn\x18\x04 \x01(\x0c\x12\x18\n\x10\x65ncryptionAlgoIn\x18\x05 \x01(\t\x12\x17\n\x0f\x65ncryptionKeyIn\x18\x06 \x01(\x0c\x12\x1c\n\x14\x61uthenticationAlgoIn\x18\x07 \x01(\t\x12\x1b\n\x13\x61uthenticationKeyIn\x18\x08 \x01(\x0c\x12\x19\n\x11softPacketLimitIn\x18\t \x01(\x04\x12\x17\n\x0fsoftTimeLimitIn\x18\n \x01(\x04\x12\x0e\n\x06spiOut\x18\x0b \x01(\x0c\x12\x19\n\x11\x65ncryptionAlgoOut\x18\x0c \x01(\t\x12\x18\n\x10\x65ncryptionKeyOut\x18\r \x01(\x0c\x12\x1d\n\x15\x61uthenticationAlgoOut\x18\x0e \x01(\t\x12\x1c\n\x14\x61uthenticationKeyOut\x18\x0f \x01(\x0c\x12\x1a\n\x12softPacketLimitOut\x18\x10 \x01(\x04\x12\x18\n\x10softTimeLimitOut\x18\x11 \x01(\x04\x12\x17\n\x06status\x18\x12 \x01(\x0b\x32\x07.status\"(\n\x06status\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\r\n\x05\x65rror\x18\x02 \x01(\t2\x84\x01\n\rTunnelService\x12&\n\x11requestTunnelByIP\x12\x08.request\x1a\x07.tunnel\x12$\n\x0frenewTunnelByIP\x12\x08.request\x1a\x07.tunnel\x12%\n\x10\x64\x65leteTunnelByIP\x12\x08.request\x1a\x07.statusb\x06proto3')
)




_REQUEST = _descriptor.Descriptor(
  name='request',
  full_name='request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='request.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clientIP', full_name='request.clientIP', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16,
  serialized_end=59,
)


_TUNNEL = _descriptor.Descriptor(
  name='tunnel',
  full_name='tunnel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tunnelID', full_name='tunnel.tunnelID', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='left', full_name='tunnel.left', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='leftSubnet', full_name='tunnel.leftSubnet', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='spiIn', full_name='tunnel.spiIn', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='encryptionAlgoIn', full_name='tunnel.encryptionAlgoIn', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='encryptionKeyIn', full_name='tunnel.encryptionKeyIn', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='authenticationAlgoIn', full_name='tunnel.authenticationAlgoIn', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='authenticationKeyIn', full_name='tunnel.authenticationKeyIn', index=7,
      number=8, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='softPacketLimitIn', full_name='tunnel.softPacketLimitIn', index=8,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='softTimeLimitIn', full_name='tunnel.softTimeLimitIn', index=9,
      number=10, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='spiOut', full_name='tunnel.spiOut', index=10,
      number=11, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='encryptionAlgoOut', full_name='tunnel.encryptionAlgoOut', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='encryptionKeyOut', full_name='tunnel.encryptionKeyOut', index=12,
      number=13, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='authenticationAlgoOut', full_name='tunnel.authenticationAlgoOut', index=13,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='authenticationKeyOut', full_name='tunnel.authenticationKeyOut', index=14,
      number=15, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='softPacketLimitOut', full_name='tunnel.softPacketLimitOut', index=15,
      number=16, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='softTimeLimitOut', full_name='tunnel.softTimeLimitOut', index=16,
      number=17, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='tunnel.status', index=17,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=508,
)


_STATUS = _descriptor.Descriptor(
  name='status',
  full_name='status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='status.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='status.error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=510,
  serialized_end=550,
)

_TUNNEL.fields_by_name['status'].message_type = _STATUS
DESCRIPTOR.message_types_by_name['request'] = _REQUEST
DESCRIPTOR.message_types_by_name['tunnel'] = _TUNNEL
DESCRIPTOR.message_types_by_name['status'] = _STATUS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

request = _reflection.GeneratedProtocolMessageType('request', (_message.Message,), dict(
  DESCRIPTOR = _REQUEST,
  __module__ = 'client_pb2'
  # @@protoc_insertion_point(class_scope:request)
  ))
_sym_db.RegisterMessage(request)

tunnel = _reflection.GeneratedProtocolMessageType('tunnel', (_message.Message,), dict(
  DESCRIPTOR = _TUNNEL,
  __module__ = 'client_pb2'
  # @@protoc_insertion_point(class_scope:tunnel)
  ))
_sym_db.RegisterMessage(tunnel)

status = _reflection.GeneratedProtocolMessageType('status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'client_pb2'
  # @@protoc_insertion_point(class_scope:status)
  ))
_sym_db.RegisterMessage(status)



_TUNNELSERVICE = _descriptor.ServiceDescriptor(
  name='TunnelService',
  full_name='TunnelService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=553,
  serialized_end=685,
  methods=[
  _descriptor.MethodDescriptor(
    name='requestTunnelByIP',
    full_name='TunnelService.requestTunnelByIP',
    index=0,
    containing_service=None,
    input_type=_REQUEST,
    output_type=_TUNNEL,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='renewTunnelByIP',
    full_name='TunnelService.renewTunnelByIP',
    index=1,
    containing_service=None,
    input_type=_REQUEST,
    output_type=_TUNNEL,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='deleteTunnelByIP',
    full_name='TunnelService.deleteTunnelByIP',
    index=2,
    containing_service=None,
    input_type=_REQUEST,
    output_type=_STATUS,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TUNNELSERVICE)

DESCRIPTOR.services_by_name['TunnelService'] = _TUNNELSERVICE

# @@protoc_insertion_point(module_scope)
