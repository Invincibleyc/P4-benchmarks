# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: topo.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='topo.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\ntopo.proto\"$\n\x04topo\x12\x0e\n\x06switch\x18\x01 \x01(\t\x12\x0c\n\x04topo\x18\x02 \x01(\x0c\"(\n\x06status\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\r\n\x05\x65rror\x18\x02 \x01(\t\":\n\ncontroller\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x0e\n\x06switch\x18\x02 \x01(\t\x12\x0b\n\x03mac\x18\x03 \x01(\t\">\n\nregisterID\x12\x17\n\x06status\x18\x01 \x01(\x0b\x32\x07.status\x12\n\n\x02id\x18\x02 \x01(\r\x12\x0b\n\x03key\x18\x03 \x01(\x0c\x32[\n\x0bTopoService\x12\x1c\n\nupdateTopo\x12\x05.topo\x1a\x07.status\x12.\n\x12registerController\x12\x0b.controller\x1a\x0b.registerIDb\x06proto3')
)




_TOPO = _descriptor.Descriptor(
  name='topo',
  full_name='topo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='switch', full_name='topo.switch', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='topo', full_name='topo.topo', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14,
  serialized_end=50,
)


_STATUS = _descriptor.Descriptor(
  name='status',
  full_name='status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='status.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='status.error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=52,
  serialized_end=92,
)


_CONTROLLER = _descriptor.Descriptor(
  name='controller',
  full_name='controller',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address', full_name='controller.address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='switch', full_name='controller.switch', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mac', full_name='controller.mac', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=94,
  serialized_end=152,
)


_REGISTERID = _descriptor.Descriptor(
  name='registerID',
  full_name='registerID',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='registerID.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id', full_name='registerID.id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='key', full_name='registerID.key', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=154,
  serialized_end=216,
)

_REGISTERID.fields_by_name['status'].message_type = _STATUS
DESCRIPTOR.message_types_by_name['topo'] = _TOPO
DESCRIPTOR.message_types_by_name['status'] = _STATUS
DESCRIPTOR.message_types_by_name['controller'] = _CONTROLLER
DESCRIPTOR.message_types_by_name['registerID'] = _REGISTERID
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

topo = _reflection.GeneratedProtocolMessageType('topo', (_message.Message,), dict(
  DESCRIPTOR = _TOPO,
  __module__ = 'topo_pb2'
  # @@protoc_insertion_point(class_scope:topo)
  ))
_sym_db.RegisterMessage(topo)

status = _reflection.GeneratedProtocolMessageType('status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'topo_pb2'
  # @@protoc_insertion_point(class_scope:status)
  ))
_sym_db.RegisterMessage(status)

controller = _reflection.GeneratedProtocolMessageType('controller', (_message.Message,), dict(
  DESCRIPTOR = _CONTROLLER,
  __module__ = 'topo_pb2'
  # @@protoc_insertion_point(class_scope:controller)
  ))
_sym_db.RegisterMessage(controller)

registerID = _reflection.GeneratedProtocolMessageType('registerID', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERID,
  __module__ = 'topo_pb2'
  # @@protoc_insertion_point(class_scope:registerID)
  ))
_sym_db.RegisterMessage(registerID)



_TOPOSERVICE = _descriptor.ServiceDescriptor(
  name='TopoService',
  full_name='TopoService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=218,
  serialized_end=309,
  methods=[
  _descriptor.MethodDescriptor(
    name='updateTopo',
    full_name='TopoService.updateTopo',
    index=0,
    containing_service=None,
    input_type=_TOPO,
    output_type=_STATUS,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='registerController',
    full_name='TopoService.registerController',
    index=1,
    containing_service=None,
    input_type=_CONTROLLER,
    output_type=_REGISTERID,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TOPOSERVICE)

DESCRIPTOR.services_by_name['TopoService'] = _TOPOSERVICE

# @@protoc_insertion_point(module_scope)
