# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import connection_pb2 as connection__pb2


class LocalServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddEntry = channel.unary_unary(
        '/controller_connection.LocalServer/AddEntry',
        request_serializer=connection__pb2.TableEntry.SerializeToString,
        response_deserializer=connection__pb2.Status.FromString,
        )
    self.RemoveEntry = channel.unary_unary(
        '/controller_connection.LocalServer/RemoveEntry',
        request_serializer=connection__pb2.TableEntry.SerializeToString,
        response_deserializer=connection__pb2.Status.FromString,
        )
    self.Hello = channel.unary_unary(
        '/controller_connection.LocalServer/Hello',
        request_serializer=connection__pb2.HelloMessage.SerializeToString,
        response_deserializer=connection__pb2.SwitchInfo.FromString,
        )


class LocalServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def AddEntry(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveEntry(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Hello(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LocalServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddEntry': grpc.unary_unary_rpc_method_handler(
          servicer.AddEntry,
          request_deserializer=connection__pb2.TableEntry.FromString,
          response_serializer=connection__pb2.Status.SerializeToString,
      ),
      'RemoveEntry': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveEntry,
          request_deserializer=connection__pb2.TableEntry.FromString,
          response_serializer=connection__pb2.Status.SerializeToString,
      ),
      'Hello': grpc.unary_unary_rpc_method_handler(
          servicer.Hello,
          request_deserializer=connection__pb2.HelloMessage.FromString,
          response_serializer=connection__pb2.SwitchInfo.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'controller_connection.LocalServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class GlobalServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GroupMessage = channel.unary_unary(
        '/controller_connection.GlobalServer/GroupMessage',
        request_serializer=connection__pb2.GroupPacket.SerializeToString,
        response_deserializer=connection__pb2.Status.FromString,
        )
    self.TopologyMessage = channel.unary_unary(
        '/controller_connection.GlobalServer/TopologyMessage',
        request_serializer=connection__pb2.TopologyPacket.SerializeToString,
        response_deserializer=connection__pb2.Status.FromString,
        )
    self.PortMessage = channel.unary_unary(
        '/controller_connection.GlobalServer/PortMessage',
        request_serializer=connection__pb2.PortInfo.SerializeToString,
        response_deserializer=connection__pb2.Status.FromString,
        )
    self.CheckConnection = channel.unary_unary(
        '/controller_connection.GlobalServer/CheckConnection',
        request_serializer=connection__pb2.Empty.SerializeToString,
        response_deserializer=connection__pb2.Status.FromString,
        )


class GlobalServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GroupMessage(self, request, context):
    """use bidirectional streaming for packet to main controller
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TopologyMessage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PortMessage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CheckConnection(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GlobalServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GroupMessage': grpc.unary_unary_rpc_method_handler(
          servicer.GroupMessage,
          request_deserializer=connection__pb2.GroupPacket.FromString,
          response_serializer=connection__pb2.Status.SerializeToString,
      ),
      'TopologyMessage': grpc.unary_unary_rpc_method_handler(
          servicer.TopologyMessage,
          request_deserializer=connection__pb2.TopologyPacket.FromString,
          response_serializer=connection__pb2.Status.SerializeToString,
      ),
      'PortMessage': grpc.unary_unary_rpc_method_handler(
          servicer.PortMessage,
          request_deserializer=connection__pb2.PortInfo.FromString,
          response_serializer=connection__pb2.Status.SerializeToString,
      ),
      'CheckConnection': grpc.unary_unary_rpc_method_handler(
          servicer.CheckConnection,
          request_deserializer=connection__pb2.Empty.FromString,
          response_serializer=connection__pb2.Status.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'controller_connection.GlobalServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
